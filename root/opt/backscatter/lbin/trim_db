#!/bin/sh
#
# trim_db: trim down size of MySQL table
#
# When       Who                What
# 2013-02-18 fredrik@xpd.se     created.

PATH=/bin:/usr/bin

PROG=$(basename $0)
MYSQL=/usr/bin/mysql
LOG_FACILITY="daemon"

KEEP_DAYS=10
MYSQL_DB=backscatter
MYSQL_TABLE=matches

#LOG_SOCKET="/run/systemd/journal/syslog"

#
# start of functions
#

info() # msg
{
	MSG="INFO: $1"
	logger -t $PROG -p $LOG_FACILITY.warn "$MSG"
#	logger --socket $LOG_SOCKET -t $PROG -p $LOG_FACILITY.warn "$MSG"
	echo "$MSG"
}

fatal() # msg
{
	MSG="FATAL: $1 (bailing out)"
	logger -t $PROG -p $LOG_FACILITY.error "$MSG"
	echo "$MSG"
	exit 255
}

#
# end of functions - start of main
#

# Initial row count
ROWS_PRE=$($MYSQL $MYSQL_DB --batch -se "SELECT COUNT(*) FROM $MYSQL_TABLE WHERE reason != '';")

# purge old, white listed entries from table (white listed AND older than $KEEP_DAYS)
START_SEC=$(date '+%s')
$MYSQL $MYSQL_DB --batch -se "DELETE FROM $MYSQL_TABLE WHERE reason != '' AND timestamp < DATE_SUB(CURRENT_DATE(), INTERVAL ${KEEP_DAYS:-45} DAY);"
STOP_SEC=$(date '+%s')

# Optimize table
$MYSQL $MYSQL_DB --batch -se "OPTIMIZE TABLE $MYSQL_TABLE"

# Ending row count
ROWS_POST=$($MYSQL $MYSQL_DB --batch -se "SELECT COUNT(*) FROM $MYSQL_TABLE WHERE reason != '';")

# Calculate and report
WALL_TIME=$(expr ${STOP_SEC:-0} - ${START_SEC:-0})
PURGED_ROWS=$(expr ${ROWS_PRE:-0} - ${ROWS_POST:-0})
if [ $PURGED_ROWS -lt 0 ]; then
	PURGED_ROWS=0
fi

info "purged $PURGED_ROWS row/s from a total of $ROWS_PRE row/s (keeping $KEEP_DAYS day/s), deletion and optimization took $WALL_TIME second/s."

exit 0
