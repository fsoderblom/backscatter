#!/bin/sh
#
# Copyright © (2006-2023) Fredrik Söderblom <fredrik@xpd.se>
#
# This file is part of Backscatter.
#
# Backscatter is free software: you can redistribute it and/or modify it under the terms of the
# GNU Affero General Public License as published by the Free Software Foundation, either
# version 3 of the License, or (at your option) any later version.
#
# Backscatter is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#  See the GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License along with
# Backscatter. If not, see <https://www.gnu.org/licenses/>.
#
# When       What		Who
# 2010-11-26 fredrik@xpd.se	created.

PATH=/usr/sbin:/usr/bin:/bin
PROG=$(basename $0)

BASE_DIR=/var/spool/backscatter
LOG_FACILITY=daemon

OWNER="scatter"
GROUP="scatter"

SUDO="/usr/bin/sudo"
NMAP="/usr/local/bin/nmap"
CI="/usr/bin/ci"
PCREGREP="/usr/bin/pcregrep"
VALID_IP_RE="^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$"

USAGE="Usage: $PROG <ip>"
#LOG_SOCKET="/run/systemd/journal/socket"
DEF_GW=10.163.0.1
DEF_GW_IF=ens192
_ALREADY_ROUTED=0

#
# Start of functions
#

info() # msg
{
	MSG="INFO: $1"
	logger -t $PROG -p $LOG_FACILITY.warn "$MSG"
#	logger --socket $LOG_SOCKET -t $PROG -p $LOG_FACILITY.warn "$MSG"
	echo "$MSG"
}

error() # msg
{
	MSG="ERROR: $1"
	logger -t $PROG -p $LOG_FACILITY.error "$MSG"
	echo "$MSG"
}

emerg() # msg
{
	MSG="EMERGENCY: $1"
	logger -t $PROG -p $LOG_FACILITY.emerg "$MSG"
	echo "$MSG"
}

# [root@u12615 bin]# ip route add 10.160.8.12 via 10.163.0.1 dev ens192
# [root@u12615 bin]# ip route get 10.160.8.12
# 10.160.8.12 via 10.163.0.1 dev ens192 src 10.163.0.142
#     cache
# [root@u12615 bin]# ip route delete 10.160.8.12 via 10.163.0.1 dev ens192
# [root@u12615 bin]# ip route get 10.160.8.12
# 10.160.8.12 via 10.100.0.1 dev ens666 src 10.100.0.11
#     cache

addRoute() # IP
{
	IP=$1
	# Already routed thru management interface?
	_ALREADY_ROUTED=$(ip route get $IP | grep -c "$DEF_GW_IF")
	if [ ${_ALREADY_ROUTED:-0} -ge 1 ]; then
		info "Not injecting route, \"$IP\" is already routed thru management interface."
	else
		ip route add $IP via $DEF_GW dev $DEF_GW_IF
	fi
}

pullRoute() # IP
{
	IP=$1
	if [ ${_ALREADY_ROUTED:-0} -ge 1 ]; then
		info "No route for \"$IP\" was injected, so nothing to delete."
	else
		ip route delete $IP via $DEF_GW dev $DEF_GW_IF
	fi
}

#
# End of functions - start of main
#

if [ $(id -u) -ne 0 ]; then
	echo "$PROG: You need to be root to run this script."
	exit 1
fi

if [ $# -lt 1 ]; then
	echo $USAGE
	exit 1
fi

SRC_IP=$1

if [ $(echo $SRC_IP | $PCREGREP -c "$VALID_IP_RE") -ne 1 ]; then
	echo $USAGE
	exit 2
fi

#
# Scan the target
addRoute $SRC_IP
$NMAP --traceroute --webxml -Pn -A -oA $BASE_DIR/scan/$SRC_IP $SRC_IP
pullRoute $SRC_IP

#
# Fix owner and check into the RCS repo
NOW=$(/bin/date '+%Y-%m-%d %H:%M:%S')
for EXT in nmap gnmap xml
do
	if [ -f $BASE_DIR/scan/$SRC_IP.${EXT} ]; then
		$CI -t-"$NOW" -m"$NOW" -l $BASE_DIR/scan/$SRC_IP.${EXT}
		chown $OWNER:$GROUP $BASE_DIR/scan/$SRC_IP.${EXT} $BASE_DIR/scan/RCS/$SRC_IP.${EXT},v
	fi
done

exit 0
