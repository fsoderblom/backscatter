user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    ##
    # SSL Settings
    ##

    ssl_protocols	TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_dhparam		/etc/nginx/tls/dhparam.pem;
    ssl_ciphers		ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_ecdh_curve	secp384r1;
    ssl_session_timeout	10m;
    ssl_session_cache	shared:SSL:10m;
    ssl_session_tickets	off;
    #ssl_stapling	on;
    #ssl_stapling_verify on;
    #resolver DNS1 DNS2 valid=300s;
    #resolver_timeout	5s;

    server {
	listen		80 default_server;
	listen		[::]:80 default_server;
	server_name	_;
	return		301 https://$host$request_uri;
    }

    server {
	listen		443 ssl default_server http2;
	listen		[::]:443 ssl default_server http2;
	server_name	_;
	index		index.php index.html;
	root		/srv/www/;

	ssl_certificate		/etc/nginx/tls/server.crt;
	ssl_certificate_key	/etc/nginx/tls/server.key;

	ssl_client_certificate	/etc/nginx/tls/client-ca.pem;
	proxy_ssl_verify_depth	2;
	ssl_verify_client	off;
#	ssl_verify_client	on;

#	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
	add_header X-Content-Type-Options "nosniff" always;
	add_header X-Frame-Options "SAMEORIGIN" always;
	add_header X-XSS-Protection "1; mode=block" always;
	add_header X-Permitted-Cross-Domain-Policies "master-only" always;
	add_header X-Robots-Tag none;
	add_header Content-Security-Policy "default-src 'self'; object-src 'none'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; connect-src 'self'; img-src 'self' data:; style-src 'self' 'unsafe-inline'; font-src 'self'; block-all-mixed-content" always;
	add_header Referrer-Policy "strict-origin-when-cross-origin" always;
	add_header Feature-Policy "fullscreen 'self'; geolocation 'self'; notifications 'self'; sync-xhr 'self'" always;

	location / {
#		if ($ssl_client_verify != SUCCESS) {
#			return 403;
#		}
		try_files	$uri $uri/ =404;
	}

	location ~ [^/]\.php(/|$) {
		include		fastcgi-php.conf;
		fastcgi_pass	127.0.0.1:9000;
		fastcgi_param	VERIFIED $ssl_client_verify;
		fastcgi_param	DN $ssl_client_s_dn;
		fastcgi_param	CERT $ssl_client_cert;
	}

	location ~ /\.ht {
		deny all;
	}
    }
}
